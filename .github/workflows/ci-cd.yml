name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout Code
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '23'



      # Frontend Tests
      - name: Set up HTTP server for frontend
        working-directory: ./frontenddevelopment
        run: |
          python3 -m http.server 8080 &
        env:
          PYTHONUNBUFFERED: 1

      - name: Install WebDriverIO dependencies
        working-directory: ./frontenddevelopment
        run: |
          npm install @wdio/cli 
          npx wdio config --yes  # Automatically accept defaults without prompts
          sudo apt-get install -y google-chrome-stable

      - name: Install ChromeDriver
        run: |
          sudo apt-get update  
          sudo apt-get install -y wget unzip  
          CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+' | head -1)  
          DRIVER_VERSION=$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION)  
          curl -Lo chromedriver.zip https://storage.googleapis.com/chrome-for-testing-public/131.0.6778.264/linux64/chromedriver-linux64.zip  
          unzip chromedriver.zip && chmod +x chromedriver && sudo mv chromedriver /usr/local/bin/  
          chromedriver --version  

      - name: Verify Chrome and ChromeDriver versions
        working-directory: ./frontenddevelopment
        run: |
          which google-chrome  
          which chromedriver 
          google-chrome --version
          chromedriver --version

      - name: Run WebDriverIO tests
        working-directory: ./frontenddevelopment
        run: |
          npx wdio run wdio.conf.js
        env:
          BASE_URL: http://localhost:8080
          DISPLAY: ':99'

      # Backend Tests
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install backend dependencies
        working-directory: ./backend-test-automation
        run: npm ci

      - name: Run backend tests
        working-directory: ./backend-test-automation
        run: npm test

      # Upload Test Reports
      - name: Upload Test Reports
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: |
            ./frontenddevelopment/test-results
            ./backend-test-automation/coverage
